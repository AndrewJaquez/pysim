Sprint 1 Progress:
- Created project structure (pysim_traffic package)
- Set up pyproject.toml with dependencies (numpy, pydantic, orjson, pygame)
- Implemented core geometry module with Node, Link, Lane, LaneConn classes
- Added Network class for topology management and validation
- Defined vehicle classes and default parameters
- Built pygame road builder UI with pan/zoom, drawing tools, node/link visualization
- Added JSON persistence layer with save/load functionality
- Created sample 4-way intersection network
- Integrated file dialogs for network import/export

Sprint 2 Progress:
- Implemented Dijkstra routing with dynamic costs (queue/signal penalties, truck constraints)
- Created demand management system with time windows, OD patterns, Poisson/deterministic spawning
- Built IDM car-following model with vehicle class-specific parameters
- Added Structure-of-Arrays vehicle storage for performance (10k+ vehicles)
- Implemented deterministic simulation state with save/load/replay capability
- Created headless runner with CSV metrics output (4600x+ real-time performance)
- Added comprehensive metrics collection (speed, delay, throughput, vehicle counts)